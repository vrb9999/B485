1) Write a program that takes a command-line argument n and prints a table of the powers of 2 that are less than or equal to 2^n.

read -p "Enter number: " n

function power(){
for((i=0; i<=$n; i++))
do
	echo "$((2**$i))"
done
}

power "$1"


2) Write a program that takes a command-line argument n and prints the nth harmonic number. 

read -p "Enter number: " n

function harmonic(){
printf "H = "
for((i=1; i<=$n; i++))
do
	if [ $i = $n ]
	then 
		printf "1/$i"
	else
		printf "1/$i + "
	fi
done
}

harmonic "$1"


3) Write a program that takes a input and determines if the number is a prime.

read -p "Enter number: " n

for((i=2; i<=$(($n/2)); i++))
do
	res=$(( $n % $i ))
  	if [ $res -eq 0 ]
  	then
    		echo "not a prime number"
  		exit 0
	fi
done
echo "Prime number"

4) Extend the program to take a range of number as input and output the Prime Numbers in that range. 

read -p "Enter starting number: " m
read -p "Enter end number: " n

for ((a=$m; a<=$n; a++))
do
    f=0
    for ((i=2; i<=$(( $a - 1 )); i++))
    do 
        if [ $(( $a % $i )) -eq 0 ]
        then
            f=1
            break
        fi
    done
    if [ $f -eq 0 ]
    then
    echo $a
    fi
done


5) Write a program that computes a factorial of a number taken as input.

read -p "Enter number for factorial: " x

fact=1

while [ $x -gt 1 ]
do
	fact=$(($fact * $x))
	x=$(($x - 1))
done

echo $fact


6) Write a function to check if the two numbers are Palindromes

read -p "Enter the number: " n

function palindrome(){
num=$n
rev=0
while [ $n -gt 0 ]
do
a=$(( $n % 10 ))
n=$(( $n / 10 ))
rev=$( echo ${rev}${a} )
done

if [ $num -eq $rev ]
then
    echo "Number is palindrome"
else
    echo "Number is not palindrome"
fi
}
r=`palindrome $n`
echo "$r"

7) Degree - C/F

read -p "Select your choice (C/F) : " d
 
if [ "$d" == "C" ]
then
	read -p "Enter temperature (C) : " c
	f=$(($c * 9/5 + 32))
	echo "$c C = $f F"
elif [ "$d" == "F" ]
then
	read -p "Enter temperature (F) : " f
	c=$((($f - 32 ) * 5/9 ))
	echo "$f F = $c C"
else
	echo "Please select C or F"
	exit 1
fi